**Redhat**
1.Following the purchase of these licences we worked with RedHat and they confirmed \
that as we are using a RedHat supplied AMI from the AWS marketplace and this includes the use of connecting \
it to the satellite server.So the RedHat servers deployed in the AWS Landing Zone use this now.

2.We have made some changes to the setup in our RHEL AMIs in AWS that means the \
RedHat supplied AWS AMIs from the Marketplace are covered by support and connect to our Satellite server. \
However, in-order to use RedHat Insight we need at least one active subscription. 

3.we’re using Simple Content access view and only renewal of 12793672 of a single License for the future marked in yellow is enough


=======================================================================================================
Satellite-
used to patch systems ,provison them and provide errata mgmt

vulnerabilities & misconfiguraions

Q:cutomers opening tickets for same problems again&again
A:Insights- used to analysis of customer's redhat  infra
  insights runs as client on cutomers systems
  it runs day & keeps u informed if we find any problems 

Q:if issue /potential issues deteched what insights does?
A: it gives detailed report on issue and level of risk 
  gives the list of manual steps to remediate the issue

=======================================================================================================
customer systems are directly registered with Redhat can find Insights next to customer portal


cutomers use satellite systems as focal point for clients registrations (webUI of insights in satellite systems)?
satellite is able support clients provisioned in no.of ways, well those systems suport insights
insights client runs on rhel6.4> and above and can also runs on physical/vm/containers 


Process for sending Insights data to redhat


yum check-update lists all the updates available for your packages. 
These you would typically upgrade to only if you need the extra functionality, not for security reasons.

=======================================================================================================
##Python3 Installation from Source(python website)

wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tar.xz
tar -vxf Python-3.* 
cd Python-3.*
./configure --prefix=/opt/python3
make
make install
sudo ln -s /opt/python3/bin/python3 /usr/bin/python3
/usr/bin/python3 

eval getent passwd {$(awk '/^UID_MIN/ {print $2}' /etc/login.defs)..$(awk '/^UID_MAX/ {print $2}' /etc/login.defs)} | cut -d: -f1 && getent passwd
HISTTIMEFORMAT="%d/%m/%y %T " && history

##Uninstallation steps
rm -rf /usr/bin/python3  ##Remove the soft Link
rm -rf /opt/python3      ## Reomve the Installables
rm -rf /root/python3.4.5 ## Reove the entire package which downloaded

id:- dyson-dschaudhary-sa						
 Redhat$202
4qfZOD49W2w!
=======================================================================================================
Terraform 
terraform init
terraform fmt
terraform plan
terraform apply --target=<module-name>

=======================================================================================================
tail -n2 <filename>
logger -p cron.err "cron error message"

sort -n		** sort the numbers  ex- 10,24,50,20000 numbers
sort -h		** sort the human readables ex- 14Kb,20Gb


telnet <IP> 30013
curl -v telnet://<IP>:30013

vgchange -ay		** with this cmd change the state of lv
=======================================================================================================
openssl x509 -in <cert> -serial -nout   	## prints Serial Number
openssl x509 -in <cert> -dates -nout		##Prints dates


=======================================================================================================
##TO make IP as static though it get reboot(in on_prem)

cat /etc/sysconfig/network-scripts/ifcfg-ens192
bootproto="none"   --> when we want IP to be static
ARPCHECK1=no        --> This will not allow any used ip mentioned in this file 
=======================================================================================================
nmtui-edit
=======================================================================================================
sudo fsck -N /dev/sdb
echo 1 /sys/block/sdb/device/rescan
resize2fs /dev/sdb
========================================================================================================

mount -t cifs -o ,username=,password=,domain=dysonsap.sap,uid=,gid=, //uk-clo-sftp-p01.dyson.online/q42 /cifs/q42
========================================================================================================
systemctl enable service			** Enable a service to start on boot
systemctl show service				** Show properties of a service (or other unit)
systemctl reload service			

systemctl stop service 				Stop a running service
systemctl start service 			Start a service
systemctl restart service 			Restart a running service
systemctl reload service 			Reload all config files in service
systemctl daemon-reload 			Must run to reload changed unit files
systemctl status service 			See if service is running/enabled
systemctl --failed 					Shows services that failed to run
systemctl reset-failed 				Resets any units from failed state
systemctl enable service 			Enable a service to start on boot
systemctl disable service 			Disable service--won’t start at boot
systemctl show service 				Show properties of a service (or other unit)
systemctl edit service 				Create snippit to drop in unit file
systemctl edit --full service 		Edit entire unit file for service
systemctl -H host status network	Run any systemctl command remotely

========================================================================================================
chage -E 90 <username>				** pwd will expire in every 90 days from last password change date
chage -W 10 <name>					** Before 10 days of pwd expire User will get a Warning to change the pwd
chage -I 10 <name>					** No.of days b/w pwd expire & pwd locked (This msg won't showup in cmd:- chage -l <name>)
chage -d 0 							** pwd change in nxt Login
passwd -e <name>					** pwd will expire next instant

chage -m 1 -M 90 <name>				** pwd expire Maximum no.of days 90 & minumum no.of day =1


========================================================================================================
=NOT(ISERROR(MATCH(cell need to check,on which table,0)))
=VLOOKUP(A2,,1,FALSE)    # Excel

yum updateinfo list security all		<=== list only patched CVE
need to check /etc/fstab entries
exclude the python package from installing 
yum update exclude=python-s3transfer -y
========================================================================================================
NFS Share
src- add entries into /etc/exports

/hana/backup/HDR *(rw,no_root_squash)
systemctl start nfs-server.service
exportfs -v

Dst-
mount -t nfs source_serverName:/hana/backup/HDR <mountpoint>
========================================================================================================
Disk Expansion(sameDisk expansion)

After extending the volume at vmware we run to below command in linux machine to reflect the new size
echo 1 > /sys/block/sda/device/rescan
lsblk
pvresize /dev/sdc
pvdisplay
lvextend -L +500G /dev/mapper/rhel-varov
xfs_growfs /dev/mapper/rhel-varov
========================================================================================================
#sosreport

redhat-support-tool addattachment -c CASE_NUMBER /path/to/sosreport
========================================================================================================
userdel -r <name>   ** -r removes user along with user home dir
getent group <groupname>   ** will list the usenames are part of that group


useradd -m -c -s /bin/bash "Linux/cloud" -G wheel nedam
	-m to create default home dir
	-c comments
	-G group name which you want to add user
	-g group id
	-s shell
	
useradd -m -d /home/<username> -c "cloud&Linux team" <username>
passwd <username>
add entry in /etc/sudoers file for elevated privilages
echo "username ALL = (ALL:ALL) ALL" >> /etc/sudoers

usermod -aG <groupname> <username>   ** most often groupname = sudo/wheel

scp -i ~/.ssh/id_rsa.pub FILENAME USER@SERVER:/home/USER/FILENAME
========================================================================================================

lsof  -> list of all open files

comm -23 <(df -Th | grep -v 'Mounted'|awk '$2 ~ /cifs/ {​​​​print $7}​​​​'|sort) <(awk '$3 ~ /cifs/ {​​​​print $2}​​​​' /etc/fstab|sort) awk '$3 ~ /cifs/ {​​​​print $2}​​​​' /etc/fstab

df -Th | grep -v 'Mounted'|awk '$2 ~ /cifs/ {​​​​print $7}​​​​'

for x in `df -Th | grep -v 'Mounted'|awk '$2 ~ /cifs/ {​​​​print $7}​​​​'`; do if grep -q $x /etc/fstab; then echo ; else echo "N"$x; fi; done
========================================================================================================

rpm -qa     			->lis all packages
rpm -qa | grep <name>
rpm -qi <>    			-> gives installation details and tiemstamp
rpm -qc					-> config files list
rpm -ql


find . -mtime +2 -delete  	 			## deletes files which are older than 2days
find . -name 'core*' -mtime +10 

sed '/admin-nedam/d' -i /etc/sudoers  	## remove entry frm sudo files


df --block-size=MB 						## Disk space in MB
==========================================================================================================================================
##Process##

du -h * | sort -r -h | head
ps aux --sort=-%mem | head 5
ps -eo pid,cmd,%cpu,%mem --sort=-%mem
 -e  -> to display all process
 -o  -> to display in format
 
swapon <mountpoint>   # swap space will reflect in #free -h cmd
==========================================================================================================================================
mkdir /var/lib/rpm/backup
cp -a /var/lib/rpm/__db* /var/lib/rpm/backup/
rm -f /var/lib/rpm/__db.[0-9][0-9]*
rpm --quiet -qa
rpm --rebuilddb
yum clean all

==========================================================================================================================================

locate <filename>


rpm (pakage naming)
pkgName-version-release.arch
kernel-3.10.0-1160.66.1.el7.x86_64

rpm -qa 
rpm -ql 
rpm -qf
rpm -qpR 
rpm -qi
rpm -qip


Test-commands(https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_07_01.html)
if [[ -n string ]]   -->True if the length of "STRING" is non-zero
if [[ -z string ]]   --> True of the length if "STRING" is zero
==========================================================================================================================================
##yum##

yum check-update	##To see which installed packages on your system have updates available


yum history
yum history info <transation Id>
yum update -y
yum downgrade <package name>

yum update --security				##To Update only security packages
==========================================================================================================================================
##SAR##

memory
sar -r 
sar -r 1 3
sar -r -f /var/log/sa/sa24
sar -r -f /var/log/sa/sa24 -s hh:mm:ss -e hh:mm:ss
	-r Memory
	-f will enanles us to read the sa24 file
	-s start time 
	-e end time
	
CPU of all cores
sar -u -f /var/log/sa/sa24	

CPU of individual cores
sar -P ALL
sar -P All -f /var/log/sa/sa24

Network stats
sar -n ALL
==========================================================================================================================================
tcpdump -eni any port 53 | 10.8.0.47

==========================================================================================================================================

$0,$1,$2  --> postional argumants passed to script
$# --> number of arugmrnts passed
$* --> all the arguments
"$*" --> sees all arguments as a single string
"$@" --> Sees all arugments as separate word/string
$? --> exit status of last command executed in script


Error: Multilib version problems found. This often means that the root cause is something else and multilib version checking is just pointing out that there is a problem. Eg.:
sudo yum erase libselinux.i686

=================================================================================

##python3 Install
yum groupinstall "Development tools"
yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel
wget https://www.python.org/ftp/python/
tar -xvf Python-3.4.3.tar.xz
cd Python-3.4.3
./configure --prefix=/opt/python3
make
make install
ln -s /opt/python3/bin/python3 /usr/bin/python3
==========================================================================================================================================
wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tar.xz
tar xf Python-3.* 
cd Python-3.*
./configure
cd Python-3.*
make
cd /opt
./configure --prefix=/opt/python3
make
make install
sudo ln -s /opt/python3/bin/python3 /usr/bin/python3
/usr/bin/python3 

==========================================================================================================================================
ebs -> snapshot(env)

snapshot--> copy (un-env)
decrpt the snapshot
share the snapshot across accounts
snap-0160984cfd08dad51


1.Find the snapshot which you want to share accros the AWS accounts
2.if its encrypted by AWS manged-encription key(AWS won't allow us to share this key across AWS accounts) then we need to create another copy of snapshot with customer managed encription_keyy.
3.share that key with another AWS accounts.
4.share the snapshot with  another AWS account(Actions-> modify policies->shared acccounts)
+++++++++++++++++++
